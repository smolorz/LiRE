#! /bin/bash

#
# OpenCV build script
# 2006-03-30 Christoph Mueller (christoph@mueller-varas.de)
# 2012/2013/2014 Sebastian Smolorz (sesmo@gmx.net)
#			- Build OpenCV 2
#			- Support Cross Compiling
#			- Cross Compiling for ARM
#

# name of this package
PACKAGE="opencv"

################################################################################
# don't touch this - start -
[ ! -f ${LiRE_DIR}/scripts/build/LIRE_SOURCE_SCRIPTS ] && exit 1
. ${LiRE_DIR}/scripts/build/LIRE_SOURCE_SCRIPTS

LIRE_BUILD_START
# don't touch this - stop -
################################################################################

# package source config file
PACKAGE_SRCCONF="$LIRE_OPENCV_SRCDIR/CMakeLists.txt"

#
# before calling LIRE_INIT_SOURCE_BUILD you have to init following values:
# PACKAGE
# PACKAGE_SRCCONF
#
LIRE_INIT_SOURCE_BUILD

#
# - the package name is valid
# - you can use this values now ($PACK = upcase name of this and all packages
#   in depends_on)
#   INFO: all dirs and files have the full path (from root)
#
#       all values in .lire_config
#       LIRE_"$PACK"_SCRDIR
#       LIRE_"$PACK"_SRCDIR
#       LIRE_"$PACK"_BUILDDIR
#       LIRE_"$PACK"_INSTDIR
#       LIRE_"$PACK"_PACKDIR
#       LIRE_"$PACK"_CONFIG
#       LIRE_"$PACK"_SRCCONF
#       LIRE_"$PACK"_VERSION
#
#       LIRE_PACKDIR
#       LIRE_OUTDIR
#       LIRE_SRCDIR
#       LIRE_BUILDDIR
#       LIRE_INSTDIR
#       LIRE_SCRDIR
#       LIRE_CONFDIR
#
# INFO: if you have an error in your script, you have to call
# LIRE_EXIT_ERROR $VAL
#

if [ $BUILD -eq 1 ]; then

#========== START YOUR BUILD HERE  =============================================
#
# You are in $LIRE_"$PACKAGE"_BUILDDIR (package build directory)
#
    #
    # configure opencv
    #
    echo " Configure OpenCV... "
    LDFLAGS="-Wl,-rpath=$LIRE_LIBJPEG_INSTDIR/lib -Wl,-rpath=$LIRE_LIBPNG_INSTDIR/lib -Wl,-rpath=$LIRE_ZLIB_INSTDIR/lib" \
    cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=$LIRE_OPENCV_INSTDIR \
    -D CMAKE_SYSTEM_NAME=Linux \
    -D BUILD_NEW_PYTHON_SUPPORT=OFF -D WITH_JASPER=OFF -D WITH_TIFF=OFF -D BUILD_DOXYGEN_DOCS=OFF \
    -D BUILD_DOCS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_TESTS=OFF -D BUILD_opencv_apps=OFF \
    -D ZLIB_LIBRARY=$LIRE_ZLIB_INSTDIR/lib/libz.so -D ZLIB_INCLUDE_DIR=$LIRE_ZLIB_INSTDIR/include \
    -D PNG_PNG_INCLUDE_DIR=$LIRE_LIBPNG_INSTDIR/include -D PNG_LIBRARY=$LIRE_LIBPNG_INSTDIR/lib/libpng.so \
    -D JPEG_INCLUDE_DIR=$LIRE_LIBJPEG_INSTDIR/include -D JPEG_LIBRARY=$LIRE_LIBJPEG_INSTDIR/lib/libjpeg.so \
    $LIRE_OPENCV_SRCDIR

    [ $? -gt 0 ] && { echo "configure [FAILED]"; LIRE_EXIT_ERROR 1; }
    echo " configure [OK]"
    
    #
    # build opencv 
    #
    echo " Building OpenCV... "

    make -j$CONFIG_LIRE_BUILD_JOBS

    [ $? -gt 0 ] && { echo "make [FAILED]"; LIRE_EXIT_ERROR 1; }
    echo "make [OK]"



#========== STOP YOUR BUILD HERE  ==============================================

fi

LIRE_STOP_BUILD_START_INSTALL

if [ $INSTALL -eq 1 ]; then

#========== START YOUR INSTALL HERE  ===========================================
#
# You are in $LIRE_"$PACKAGE"_BUILDDIR (package build directory)
#

    #
    # make install
    #
    echo " make install"
    make install/strip
    [ $? -gt 0 ] && { echo "make install [FAILED]"; LIRE_EXIT_ERROR 1; }
    echo "make install [OK]"

    # remove .la files
    rm ${LIRE_OPENCV_INSTDIR}/lib/*.la

#========== STOP YOUR INSTALL HERE  ============================================

fi

LIRE_STOP_INSTALL_START_MAKE_PACKAGE

if [ $MAKEPACK -eq 1 ]; then

#========== START YOUR MAKE PACKAGE HERE  ======================================
#
# You are in $LIRE_"$PACKAGE"_INSTDIR (package install directory)
#

    #
    # build tar tree
    #
    echo " build tar tree ... "

    # make dirs
    mkdir -p "tar/lib/"

    # copy files
    echo -n " Copy libraries ... "
    cp -fd lib/lib*.so.*  "tar/lib/"
    
    [ $? -gt 0 ] && { echo "[FAILED]"; cd ..; LIRE_EXIT_ERROR 1; }
    echo "[OK]"

    #
    # create tar.bz2
    #
    TAR="$PACKAGE.tar.bz2"
    DEST="$LIRE_OPENCV_PACKDIR/"

    cd tar
    echo -n " Creating $TAR ... "
    tar -cjf "$TAR" *
    [ $? -gt 0 ] && { echo "[FAILED]"; cd ..; LIRE_EXIT_ERROR 1; }
    echo "[OK]"

    echo -n " Move $TAR to $DEST... "
    mv -f "$TAR" "$DEST"
    [ $? -gt 0 ] && { echo "[FAILED]"; cd ..; LIRE_EXIT_ERROR 1; }
    echo "[OK]"
    cd ..

    #
    # remove tar dir
    #
    rm -rf tar
    
#========== STOP YOUR MAKE PACKAGE HERE  =======================================

fi

LIRE_STOP_MAKE_PACKAGE
LIRE_EXIT_SOURCE_BUILD
