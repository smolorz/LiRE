#! /bin/bash

#
# pcl build script
# 2012-03-09 Sascha Kruse <knopwob@googlemail.com
#

# name of this package
PACKAGE="pcl"

################################################################################
# don't touch this - start -
[ ! -f ${LiRE_DIR}/scripts/build/LIRE_SOURCE_SCRIPTS ] && exit 1
. ${LiRE_DIR}/scripts/build/LIRE_SOURCE_SCRIPTS

LIRE_BUILD_START
# don't touch this - stop -
################################################################################

# package source config file
PACKAGE_SRCCONF="$LIRE_PCL_SRCDIR/CMakeLists.txt"

#
# before calling LIRE_INIT_SOURCE_BUILD you have to init following values:
# PACKAGE
# PACKAGE_SRCCONF
#
LIRE_INIT_SOURCE_BUILD

#
# - the package name is valid
# - you can use this values now ($PACK = upcase name of this and all packages
#   in depends_on)
#   INFO: all dirs and files have the full path (from root)
#
#       all values in .lire_config
#       LIRE_"$PACK"_SCRDIR
#       LIRE_"$PACK"_SRCDIR
#       LIRE_"$PACK"_BUILDDIR
#       LIRE_"$PACK"_INSTDIR
#       LIRE_"$PACK"_PACKDIR
#       LIRE_"$PACK"_CONFIG
#       LIRE_"$PACK"_SRCCONF
#       LIRE_"$PACK"_VERSION
#
#       LIRE_PACKDIR
#       LIRE_OUTDIR
#       LIRE_SRCDIR
#       LIRE_BUILDDIR
#       LIRE_INSTDIR
#       LIRE_SCRDIR
#       LIRE_CONFDIR
#
# INFO: if you have an error in your script, you have to call
# LIRE_EXIT_ERROR $VAL
#

if [ $BUILD -eq 1 ]; then

#========== START YOUR BUILD HERE  =============================================
#
# You are in $LIRE_"$PACKAGE"_BUILDDIR (package build directory)
#

    TARGET_FS="$LIRE_PCL_BUILDDIR/targetfs"
    TOOLCHAIN_CMAKE="$LIRE_PCL_SRCDIR/toolchain.cmake"
    [ -f $TOOLCHAIN_CMAKE ] && rm $TOOLCHAIN_CMAKE
    [ -d $TARGET_FS ] && rm -rf $TARGET_FS
    mkdir -p $TARGET_FS
    cp -r $LIRE_BOOST_INSTDIR/* $LIRE_ZLIB_INSTDIR/* $LIRE_FLANN_INSTDIR/* $LIRE_EIGEN_INSTDIR/* $TARGET_FS
    echo "
SET(CMAKE_SYSTEM_NAME Linux)
SET(CMAKE_SYSTEM_PROCESSOR $ARCH)
SET(CMAKE_SYSTEM_VERSION 1)

SET(CMAKE_C_COMPILER ${CC})
SET(CMAKE_CXX_COMPILER ${CXX})

SET(CMAKE_FIND_ROOT_PATH $TARGET_FS)
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAMM NEVER)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY BOTH)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE BOTH)" > $TOOLCHAIN_CMAKE

# create TryRunResults.cmake from template
check_sse_var() {
    if [ -n "$1" ]; then
        echo "0"
    else
        echo "FAILED TO RUN"
    fi
}

sse=$(check_sse_var "$CONFIG_LIRE_PCL_HAS_SSE")
sse2=$(check_sse_var "$CONFIG_LIRE_PCL_HAS_SSE2")
sse3=$(check_sse_var "$CONFIG_LIRE_PCL_HAS_SSE3")
sse4_1=$(check_sse_var "$CONFIG_LIRE_PCL_HAS_SSE4_1")

sed -e "s/%SSE%/$sse/" \
    -e "s/%SSE2%/$sse2/" \
    -e "s/%SSE3%/$sse3/" \
    -e "s/%SSE4_1%/$sse4_1/" \
    $LIRE_PCL_SCRDIR/TryRunResults.cmake.template > $LIRE_PCL_SCRDIR/TryRunResults.cmake


    cmake -C $LIRE_PCL_SCRDIR/TryRunResults.cmake \
          -DCMAKE_INSTALL_PREFIX="$LIRE_PCL_INSTDIR" \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_TOOLCHAIN_FILE="$TOOLCHAIN_CMAKE" \
          -DWITH_CUDA=OFF -DWITH_QT=OFF -DWITH_VTK=OFF \
          -DWITH_PCAP=OFF -DWITH_OPENGL=OFF \
          "$LIRE_PCL_SRCDIR"

    [ $? -gt 0 ] && { echo "make [FAILED]"; LIRE_EXIT_ERROR 1; }
    echo "make [OK]"

    make -j $CONFIG_LIRE_BUILD_JOBS
    [ $? -gt 0 ] && { echo "make [FAILED]"; LIRE_EXIT_ERROR 1; }
    echo "make [OK]"


#========== STOP YOUR BUILD HERE  ==============================================

fi

LIRE_STOP_BUILD_START_INSTALL

if [ $INSTALL -eq 1 ]; then

#========== START YOUR INSTALL HERE  ===========================================
#
# You are in $LIRE_"$PACKAGE"_BUILDDIR (package build directory)
#


    echo " make install $PACKAGE"
    make  install
    [ $? -gt 0 ] && { echo "make install [FAILED]"; LIRE_EXIT_ERROR 1; }
    echo "make install [OK]"

#========== STOP YOUR INSTALL HERE  ============================================

fi

LIRE_STOP_INSTALL_START_MAKE_PACKAGE

if [ $MAKEPACK -eq 1 ]; then

#========== START YOUR MAKE PACKAGE HERE  ======================================
#
# You are in $LIRE_"$PACKAGE"_INSTDIR (package install directory)
#

    DEST="$LIRE_PCL_PACKDIR/"
    TAR="$LIRE_PCL_SRCDIR/$PACKAGE.tar.bz2"

    #
    # create tar.bz2
    #

    echo -n " Creating $TAR ... "
    ${STRIP:-strip} -s lib/*.so* bin/*
    tar -cjf "$TAR" lib/*.so.* bin/*
    [ $? -gt 0 ] && { echo "[FAILED]"; cd ..; LIRE_EXIT_ERROR 1; }
    echo "[OK]"
    echo -n " Move $TAR to $DEST... "
    mv -f "$TAR" "$DEST"
    [ $? -gt 0 ] && { echo "[FAILED]"; cd ..; LIRE_EXIT_ERROR 1; }
    echo "[OK]"
    cd ..


#========== STOP YOUR MAKE PACKAGE HERE  =======================================

fi

LIRE_STOP_MAKE_PACKAGE
LIRE_EXIT_SOURCE_BUILD
