#! /bin/bash

#
# geometry build script
# 2014-11-07 Sebastian Smolorz (sesmo@gmx.net)
#
# WARNING: This source.build script expects a meta package geometry.
# For now, this is a quick, dirty and nasty hack. You have to provide a
# geometry_{un}stable.tar.bz2 with the following contents:
# 
# - ros/geometry
# - orocos/orocos_kinematics_dynamics (remove python_orocos_kdl!!)
# - ros/angles
# - ros/actionlib
# - ros/geometry_experimental
#       and there, do the following:
#       - remove the bullet dependency from tf2_bullet/package.xml and tf2_bullet/CMakeLists.txt
#       - in tf2_ros, remove tf2_py directory and from package.xml, CMakeLists.txt and setup.py
#       - in tf/CMakeLists.txt, remove all occurrences of pytf

# name of this package
PACKAGE="geometry"

################################################################################
# don't touch this - start -
[ ! -f ${LiRE_DIR}/scripts/build/LIRE_SOURCE_SCRIPTS ] && exit 1
. ${LiRE_DIR}/scripts/build/LIRE_SOURCE_SCRIPTS

LIRE_BUILD_START
# don't touch this - stop -
################################################################################

# package source config file
PACKAGE_SRCCONF="$LIRE_GEOMETRY_SRCDIR/geometry/CMakeLists.txt"

#
# before calling LIRE_INIT_SOURCE_BUILD you have to init following values:
# PACKAGE
# PACKAGE_SRCCONF
#
LIRE_INIT_SOURCE_BUILD

#
# - the package name is valid
# - you can use this values now ($PACK = upcase name of this and all packages
#   in depends_on)
#   INFO: all dirs and files have the full path (from root)
#
#       all values in .lire_config
#       LIRE_"$PACK"_SCRDIR
#       LIRE_"$PACK"_SRCDIR
#       LIRE_"$PACK"_BUILDDIR
#       LIRE_"$PACK"_INSTDIR
#       LIRE_"$PACK"_PACKDIR
#       LIRE_"$PACK"_CONFIG
#       LIRE_"$PACK"_SRCCONF
#       LIRE_"$PACK"_VERSION
#
#       LIRE_PACKDIR
#       LIRE_OUTDIR
#       LIRE_SRCDIR
#       LIRE_BUILDDIR
#       LIRE_INSTDIR
#       LIRE_SCRDIR
#       LIRE_CONFDIR
#
# INFO: if you have an error in your script, you have to call
# LIRE_EXIT_ERROR $VAL
#

#if [ $BUILD -eq 1 ]; then

#========== START YOUR BUILD HERE  =============================================
#
# You are in $LIRE_"$PACKAGE"_BUILDDIR (package build directory)
#


#========== STOP YOUR BUILD HERE  ==============================================

#fi

LIRE_STOP_BUILD_START_INSTALL

if [ $INSTALL -eq 1 ]; then

#========== START YOUR INSTALL HERE  ===========================================
#
# You are in $LIRE_"$PACKAGE"_BUILDDIR (package build directory)
#

#    catkin_make install/strip --source ${LIRE_GEOMETRY_SRCDIR} \
#         -DCMAKE_INSTALL_PREFIX=$LIRE_GEOMETRY_INSTDIR
#    [ $? -gt 0 ] && { echo "make install [FAILED]"; LIRE_EXIT_ERROR 1; }
#    echo "make install [OK]"
    source ${LIRE_ROS_COMM_INSTDIR}/setup.bash
    export CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:$LIRE_ROS_COMM_INSTDIR:\
$LIRE_STD_MSGS_INSTDIR:$LIRE_MESSAGE_GENERATION_INSTDIR:\
$LIRE_COMMON_MSGS_INSTDIR:$LIRE_CMAKE_MODULES_INSTDIR

    catkin_make_isolated --install --install-space $LIRE_GEOMETRY_INSTDIR --source ${LIRE_GEOMETRY_SRCDIR} \
	-DSETUPTOOLS_DEB_LAYOUT=OFF -DCMAKE_BUILD_TYPE=Release \
        -DCATKIN_ENABLE_TESTING=0 -DEIGEN3_INCLUDE_DIR=$LIRE_EIGEN_INSTDIR/include/eigen3 \
        -DEIGEN_INCLUDE_DIR=$LIRE_EIGEN_INSTDIR/include/eigen3 \
        -DBOOST_ROOT=$LIRE_BOOST_INSTDIR -DCMAKE_TOOLCHAIN_FILE=$LIRE_ROS_COMM_SRCDIR/toolchain.cmake

    [ $? -gt 0 ] && { echo "catkin_make [FAILED]"; LIRE_EXIT_ERROR 1; }
    echo " catkin_make [OK]"



#========== STOP YOUR INSTALL HERE  ============================================

fi

LIRE_STOP_INSTALL_START_MAKE_PACKAGE

if [ $MAKEPACK -eq 1 ]; then

#========== START YOUR MAKE PACKAGE HERE  ======================================
#
# You are in $LIRE_"$PACKAGE"_INSTDIR (package install directory)
#

   #
   # create tar.bz2
   #
   TAR="$PACKAGE.tar.bz2"
   DEST="$LIRE_GEOMETRY_PACKDIR/"

   echo -n " Creating $TAR ... "
   mkdir -p usr
   cp -r share usr
   find usr -name cmake -execdir rm -rf \{\} \;

   tar -cjf "$TAR" lib/lib*.so* lib/python* lib/actionlib lib/tf* usr
   [ $? -gt 0 ] && { echo "[FAILED]"; cd ..; LIRE_EXIT_ERROR 1; }
   echo "[OK]"

   echo -n " Move $TAR to $DEST... "
   mv -f "$TAR" "$DEST"
   [ $? -gt 0 ] && { echo "[FAILED]"; cd ..; LIRE_EXIT_ERROR 1; }
   echo "[OK]"

   rm -rf usr

#========== STOP YOUR MAKE PACKAGE HERE  =======================================

fi

LIRE_STOP_MAKE_PACKAGE
LIRE_EXIT_SOURCE_BUILD
