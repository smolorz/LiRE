#! /bin/bash

#
# parted build script
# 2018-09-21 Sebastian Smolorz (sebastian.smolorz@still.de)
#

# name of this package
PACKAGE="parted"

################################################################################
# don't touch this - start -
[ ! -f ${LiRE_DIR}/scripts/build/LIRE_SOURCE_SCRIPTS ] && exit 1
. ${LiRE_DIR}/scripts/build/LIRE_SOURCE_SCRIPTS

LIRE_BUILD_START
# don't touch this - stop -
################################################################################

# package source config file
PACKAGE_SRCCONF="$LIRE_PARTED_SRCDIR/configure"

#
# before calling LIRE_INIT_SOURCE_BUILD you have to init following values:
# PACKAGE
# PACKAGE_SRCCONF
#
LIRE_INIT_SOURCE_BUILD

#
# - the package name is valid
# - you can use this values now ($PACK = upcase name of this and all packages
#   in depends_on)
#   INFO: all dirs and files have the full path (from root)
#
#       all values in .lire_config
#       LIRE_"$PACK"_SCRDIR
#       LIRE_"$PACK"_SRCDIR
#       LIRE_"$PACK"_BUILDDIR
#       LIRE_"$PACK"_INSTDIR
#       LIRE_"$PACK"_PACKDIR
#       LIRE_"$PACK"_CONFIG
#       LIRE_"$PACK"_SRCCONF
#       LIRE_"$PACK"_VERSION
#
#       LIRE_PACKDIR
#       LIRE_OUTDIR
#       LIRE_SRCDIR
#       LIRE_BUILDDIR
#       LIRE_INSTDIR
#       LIRE_SCRDIR
#       LIRE_CONFDIR
#
# INFO: if you have an error in your script, you have to call
# LIRE_EXIT_ERROR $VAL
#

if [ $BUILD -eq 1 ]; then

#========== START YOUR BUILD HERE  =============================================
#
# You are in $LIRE_"$PACKAGE"_BUILDDIR (package build directory)
#

    #
    # configure parted
    #
    echo " Configure parted ... "
    
    $LIRE_PARTED_SRCDIR/configure --prefix=$LIRE_PARTED_INSTDIR \
            LDFLAGS=-L$LIRE_E2FSPROGS_INSTDIR/lib \
            CFLAGS="-I$LIRE_E2FSPROGS_INSTDIR/include -fPIC" \
            UUID_LIBS=-luuid --disable-device-mapper --without-readline
    
    [ $? -gt 0 ] && { echo "configure [FAILED]"; LIRE_EXIT_ERROR 1; }
    echo " configure [OK]"

    #
    # build parted
    #
    echo " Building parted ... "
    
    make -j$CONFIG_LIRE_BUILD_JOBS
	
    [ $? -gt 0 ] && { echo "make [FAILED]"; LIRE_EXIT_ERROR 1; }
    echo "make [OK]"



#========== STOP YOUR BUILD HERE  ==============================================

fi

LIRE_STOP_BUILD_START_INSTALL

if [ $INSTALL -eq 1 ]; then

#========== START YOUR INSTALL HERE  ===========================================
#
# You are in $LIRE_"$PACKAGE"_BUILDDIR (package build directory)
#

    #
    # make install
    #
    echo " make install"
    make install
    [ $? -gt 0 ] && { echo "make install [FAILED]"; LIRE_EXIT_ERROR 1; }
    echo "make install [OK]"

    # remove .la files
    rm ${LIRE_PARTED_INSTDIR}/lib/*.la

#========== STOP YOUR INSTALL HERE  ============================================

fi

LIRE_STOP_INSTALL_START_MAKE_PACKAGE

if [ $MAKEPACK -eq 1 ]; then

#========== START YOUR MAKE PACKAGE HERE  ======================================
#
# You are in $LIRE_"$PACKAGE"_INSTDIR (package install directory)
#

    #
    # strip binaries
    #
    echo " strip binaries"
    ${STRIP} -s sbin/*
    [ $? -gt 0 ] && { echo "strip binaries [FAILED]"; LIRE_EXIT_ERROR 1; }
    echo "strip binaries [OK]"

    #
    # building tar tree
    #

    rm -rf tar
    [ $? -gt 0 ] && { echo "[FAILED]"; LIRE_EXIT_ERROR 1; }

    mkdir tar
    [ $? -gt 0 ] && { echo "[FAILED]"; LIRE_EXIT_ERROR 1; }

    mkdir tar/lib
    cp -r lib/libparted.so* tar/lib && cp -r sbin tar/ || { echo "[FAILED]"; LIRE_EXIT_ERROR 1; }


    #
    # create tar.bz2
    #

    DEST="$LIRE_PARTED_PACKDIR/"
    TAR="$LIRE_PARTED_SRCDIR/$PACKAGE.tar.bz2"

    # switching into tar dir
    cd tar/
    [ $? -gt 0 ] && { echo "[FAILED]"; LIRE_EXIT_ERROR 1; }

    echo -n " Creating $TAR ... "
    tar -cjf "$TAR" *
    [ $? -gt 0 ] && { echo "[FAILED]"; cd ..; LIRE_EXIT_ERROR 1; }
    echo "[OK]"					
    echo -n " Move $TAR to $DEST... "
    mv -f "$TAR" "$DEST"
    [ $? -gt 0 ] && { echo "[FAILED]"; cd ..; LIRE_EXIT_ERROR 1; }
    echo "[OK]"
    cd ..

    # Removing tar.bz2
    rm -rf tar/
    [ $? -gt 0 ] && { echo "[FAILED]"; LIRE_EXIT_ERROR 1; }

							    

#========== STOP YOUR MAKE PACKAGE HERE  =======================================

fi

LIRE_STOP_MAKE_PACKAGE
LIRE_EXIT_SOURCE_BUILD
